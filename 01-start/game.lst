ca65 V2.18 - Git f75657d
Main file   : game.s
Current file: game.s

000000r 1               ;
000000r 1               ; File generated by cc65 v 2.18 - Git f75657d
000000r 1               ;
000000r 1               	.fopt		compiler,"cc65 v 2.18 - Git f75657d"
000000r 1               	.setcpu		"6502"
000000r 1               	.smart		on
000000r 1               	.autoimport	on
000000r 1               	.case		on
000000r 1               	.debuginfo	off
000000r 1               	.importzp	sp, sreg, regsave, regbank
000000r 1               	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
000000r 1               	.macpack	longbranch
000000r 2               .macro  jeq     Target
000000r 2                       .if     .match(Target, 0)
000000r 2                       bne     *+5
000000r 2                       jmp     Target
000000r 2                       .elseif .def(Target) .and .const((*-2)-(Target)) .and ((*+2)-(Target) <= 127)
000000r 2                               beq     Target
000000r 2                       .else
000000r 2                               bne     *+5
000000r 2                               jmp     Target
000000r 2                       .endif
000000r 2               .endmacro
000000r 2               .macro  jne     Target
000000r 2                       .if     .match(Target, 0)
000000r 2                               beq     *+5
000000r 2                               jmp     Target
000000r 2                       .elseif .def(Target) .and .const((*-2)-(Target)) .and ((*+2)-(Target) <= 127)
000000r 2                               bne     Target
000000r 2                       .else
000000r 2                               beq     *+5
000000r 2                               jmp     Target
000000r 2                       .endif
000000r 2               .endmacro
000000r 2               .macro  jmi     Target
000000r 2                       .if     .match(Target, 0)
000000r 2                               bpl     *+5
000000r 2                               jmp     Target
000000r 2                       .elseif .def(Target) .and .const((*-2)-(Target)) .and ((*+2)-(Target) <= 127)
000000r 2                               bmi     Target
000000r 2                       .else
000000r 2                               bpl     *+5
000000r 2                               jmp     Target
000000r 2                       .endif
000000r 2               .endmacro
000000r 2               .macro  jpl     Target
000000r 2                       .if     .match(Target, 0)
000000r 2                               bmi     *+5
000000r 2                               jmp     Target
000000r 2                       .elseif .def(Target) .and .const((*-2)-(Target)) .and ((*+2)-(Target) <= 127)
000000r 2                               bpl     Target
000000r 2                       .else
000000r 2                               bmi     *+5
000000r 2                               jmp     Target
000000r 2                       .endif
000000r 2               .endmacro
000000r 2               .macro  jcs     Target
000000r 2                       .if     .match(Target, 0)
000000r 2                               bcc     *+5
000000r 2                               jmp     Target
000000r 2                       .elseif .def(Target) .and .const((*-2)-(Target)) .and ((*+2)-(Target) <= 127)
000000r 2                               bcs     Target
000000r 2                       .else
000000r 2                               bcc     *+5
000000r 2                               jmp     Target
000000r 2                       .endif
000000r 2               .endmacro
000000r 2               .macro  jcc     Target
000000r 2                       .if     .match(Target, 0)
000000r 2                               bcs     *+5
000000r 2                               jmp     Target
000000r 2                       .elseif .def(Target) .and .const((*-2)-(Target)) .and ((*+2)-(Target) <= 127)
000000r 2                               bcc     Target
000000r 2                       .else
000000r 2                               bcs     *+5
000000r 2                               jmp     Target
000000r 2                       .endif
000000r 2               .endmacro
000000r 2               .macro  jvs     Target
000000r 2                       .if     .match(Target, 0)
000000r 2                               bvc     *+5
000000r 2                               jmp     Target
000000r 2                       .elseif .def(Target) .and .const((*-2)-(Target)) .and ((*+2)-(Target) <= 127)
000000r 2                               bvs     Target
000000r 2                       .else
000000r 2                               bvc     *+5
000000r 2                               jmp     Target
000000r 2                       .endif
000000r 2               .endmacro
000000r 2               .macro  jvc     Target
000000r 2                       .if     .match(Target, 0)
000000r 2                               bvs     *+5
000000r 2                               jmp     Target
000000r 2                       .elseif .def(Target) .and .const((*-2)-(Target)) .and ((*+2)-(Target) <= 127)
000000r 2                               bvc     Target
000000r 2                       .else
000000r 2                               bvs     *+5
000000r 2                               jmp     Target
000000r 2                       .endif
000000r 2               .endmacro
000000r 2               
000000r 1               	.forceimport	__STARTUP__
000000r 1               	.import		_printf
000000r 1               	.export		_start_benchmark
000000r 1               	.export		_ticks
000000r 1               	.export		_end_benchmark
000000r 1               	.export		_place_enemy
000000r 1               	.export		_set_entities
000000r 1               	.export		_get_entity_tile
000000r 1               	.export		_draw_entity
000000r 1               	.export		_damage_enemy
000000r 1               	.export		_one_frame
000000r 1               	.export		_main
000000r 1               
000000r 1               .segment	"RODATA"
000000r 1               
000000r 1               L0042:
000000r 1  25 75 20 74  	.byte	$25,$75,$20,$74,$69,$63,$6B,$73,$00
000004r 1  69 63 6B 73  
000008r 1  00           
000009r 1               
000009r 1               .segment	"BSS"
000000r 1               
000000r 1               _ticks:
000000r 1  00 00        	.res	2,$00
000002r 1               
000002r 1               ; ---------------------------------------------------------------
000002r 1               ; void __near__ start_benchmark (void)
000002r 1               ; ---------------------------------------------------------------
000002r 1               
000002r 1               .segment	"CODE"
000000r 1               
000000r 1               .proc	_start_benchmark: near
000000r 1               
000000r 1               .segment	"CODE"
000000r 1               
000000r 1               ;
000000r 1               ; asm("SEI");
000000r 1               ;
000000r 1  78           	sei
000001r 1               ;
000001r 1               ; asm("lda $14");
000001r 1               ;
000001r 1  A5 14        	lda     $14
000003r 1               ;
000003r 1               ; asm("cmp $14");
000003r 1               ;
000003r 1  C5 14        L0025:	cmp     $14
000005r 1               ;
000005r 1               ; asm("beq %g", wvb);
000005r 1               ;
000005r 1  F0 FC        	beq     L0025
000007r 1               ;
000007r 1               ; asm("lda #0");
000007r 1               ;
000007r 1  A9 00        	lda     #0
000009r 1               ;
000009r 1               ; asm("sta $13");
000009r 1               ;
000009r 1  85 13        	sta     $13
00000Br 1               ;
00000Br 1               ; asm("sta $14");
00000Br 1               ;
00000Br 1  85 14        	sta     $14
00000Dr 1               ;
00000Dr 1               ; asm("CLI");
00000Dr 1               ;
00000Dr 1  58           	cli
00000Er 1               ;
00000Er 1               ; }
00000Er 1               ;
00000Er 1  60           	rts
00000Fr 1               
00000Fr 1               .endproc
00000Fr 1               
00000Fr 1               ; ---------------------------------------------------------------
00000Fr 1               ; void __near__ end_benchmark (void)
00000Fr 1               ; ---------------------------------------------------------------
00000Fr 1               
00000Fr 1               .segment	"CODE"
00000Fr 1               
00000Fr 1               .proc	_end_benchmark: near
00000Fr 1               
00000Fr 1               .segment	"CODE"
00000Fr 1               
00000Fr 1               ;
00000Fr 1               ; asm("SEI");
00000Fr 1               ;
00000Fr 1  78           	sei
000010r 1               ;
000010r 1               ; asm("lda $14");
000010r 1               ;
000010r 1  A5 14        	lda     $14
000012r 1               ;
000012r 1               ; asm("sta %v", ticks);
000012r 1               ;
000012r 1  8D rr rr     	sta     _ticks
000015r 1               ;
000015r 1               ; asm("lda $13");
000015r 1               ;
000015r 1  A5 13        	lda     $13
000017r 1               ;
000017r 1               ; asm("sta %v+1", ticks);
000017r 1               ;
000017r 1  8D rr rr     	sta     _ticks+1
00001Ar 1               ;
00001Ar 1               ; asm("CLI");
00001Ar 1               ;
00001Ar 1  58           	cli
00001Br 1               ;
00001Br 1               ; printf("%u ticks", ticks);
00001Br 1               ;
00001Br 1  A9 rr        	lda     #<(L0042)
00001Dr 1  A2 rr        	ldx     #>(L0042)
00001Fr 1  20 rr rr     	jsr     pushax
000022r 1  AD rr rr     	lda     _ticks
000025r 1  AE rr rr     	ldx     _ticks+1
000028r 1  20 rr rr     	jsr     pushax
00002Br 1  A0 04        	ldy     #$04
00002Dr 1  20 rr rr     	jsr     _printf
000030r 1               ;
000030r 1               ; }
000030r 1               ;
000030r 1  60           	rts
000031r 1               
000031r 1               .endproc
000031r 1               
000031r 1               ; ---------------------------------------------------------------
000031r 1               ; void __near__ place_enemy (__near__ struct s_entity *, int, int)
000031r 1               ; ---------------------------------------------------------------
000031r 1               
000031r 1               .segment	"CODE"
000031r 1               
000031r 1               .proc	_place_enemy: near
000031r 1               
000031r 1               .segment	"CODE"
000031r 1               
000031r 1               ;
000031r 1               ; {
000031r 1               ;
000031r 1  20 rr rr     	jsr     pushax
000034r 1               ;
000034r 1               ; e_ptr->x = x;
000034r 1               ;
000034r 1  A0 05        	ldy     #$05
000036r 1  20 rr rr     	jsr     ldaxysp
000039r 1  20 rr rr     	jsr     pushax
00003Cr 1  A0 05        	ldy     #$05
00003Er 1  20 rr rr     	jsr     ldaxysp
000041r 1  A0 00        	ldy     #$00
000043r 1  20 rr rr     	jsr     staxspidx
000046r 1               ;
000046r 1               ; e_ptr->y = y;
000046r 1               ;
000046r 1  A0 05        	ldy     #$05
000048r 1  20 rr rr     	jsr     ldaxysp
00004Br 1  20 rr rr     	jsr     pushax
00004Er 1  A0 03        	ldy     #$03
000050r 1  20 rr rr     	jsr     ldaxysp
000053r 1  A0 02        	ldy     #$02
000055r 1  20 rr rr     	jsr     staxspidx
000058r 1               ;
000058r 1               ; }
000058r 1               ;
000058r 1  20 rr rr     	jsr     incsp6
00005Br 1  60           	rts
00005Cr 1               
00005Cr 1               .endproc
00005Cr 1               
00005Cr 1               ; ---------------------------------------------------------------
00005Cr 1               ; void __near__ set_entities (__near__ struct s_game_state *)
00005Cr 1               ; ---------------------------------------------------------------
00005Cr 1               
00005Cr 1               .segment	"CODE"
00005Cr 1               
00005Cr 1               .proc	_set_entities: near
00005Cr 1               
00005Cr 1               .segment	"CODE"
00005Cr 1               
00005Cr 1               ;
00005Cr 1               ; {
00005Cr 1               ;
00005Cr 1  20 rr rr     	jsr     pushax
00005Fr 1               ;
00005Fr 1               ; for (index=0;index<_countof(game_state->enemies);index++)
00005Fr 1               ;
00005Fr 1  20 rr rr     	jsr     decsp4
000062r 1  A2 00        	ldx     #$00
000064r 1  A9 00        	lda     #$00
000066r 1  A0 02        	ldy     #$02
000068r 1  20 rr rr     	jsr     staxysp
00006Br 1  A0 03        L004C:	ldy     #$03
00006Dr 1  20 rr rr     	jsr     ldaxysp
000070r 1  E0 00        	cpx     #$00
000072r 1  D0 02        	bne     L0057
000074r 1  C9 1E        	cmp     #$1E
000076r 1  20 rr rr     L0057:	jsr     boolult
000079r 1  F0 03 4C rr  	jne     L004F
00007Dr 1  rr           
00007Er 1  4C rr rr     	jmp     L004D
000081r 1               ;
000081r 1               ; e = &game_state->enemies[index];
000081r 1               ;
000081r 1  A0 05        L004F:	ldy     #$05
000083r 1  20 rr rr     	jsr     ldaxysp
000086r 1  20 rr rr     	jsr     pushax
000089r 1  A0 05        	ldy     #$05
00008Br 1  20 rr rr     	jsr     ldaxysp
00008Er 1  20 rr rr     	jsr     aslax3
000091r 1  20 rr rr     	jsr     tosaddax
000094r 1  A0 00        	ldy     #$00
000096r 1  20 rr rr     	jsr     staxysp
000099r 1               ;
000099r 1               ; place_enemy( e, (index*5) % SCREEN_SIZE_X, index / 2 + 9);
000099r 1               ;
000099r 1  A0 01        	ldy     #$01
00009Br 1  20 rr rr     	jsr     ldaxysp
00009Er 1  20 rr rr     	jsr     pushax
0000A1r 1  A0 05        	ldy     #$05
0000A3r 1  20 rr rr     	jsr     ldaxysp
0000A6r 1  20 rr rr     	jsr     mulax5
0000A9r 1  20 rr rr     	jsr     pushax
0000ACr 1  A2 00        	ldx     #$00
0000AEr 1  A9 28        	lda     #$28
0000B0r 1  20 rr rr     	jsr     tosmodax
0000B3r 1  20 rr rr     	jsr     pushax
0000B6r 1  A0 07        	ldy     #$07
0000B8r 1  20 rr rr     	jsr     ldaxysp
0000BBr 1  20 rr rr     	jsr     asrax1
0000BEr 1  A0 09        	ldy     #$09
0000C0r 1  20 rr rr     	jsr     incaxy
0000C3r 1  20 rr rr     	jsr     _place_enemy
0000C6r 1               ;
0000C6r 1               ; e->hp = 99;
0000C6r 1               ;
0000C6r 1  A0 01        	ldy     #$01
0000C8r 1  20 rr rr     	jsr     ldaxysp
0000CBr 1  20 rr rr     	jsr     pushax
0000CEr 1  A2 00        	ldx     #$00
0000D0r 1  A9 63        	lda     #$63
0000D2r 1  A0 04        	ldy     #$04
0000D4r 1  20 rr rr     	jsr     staxspidx
0000D7r 1               ;
0000D7r 1               ; e->type = ENTITY_ENEMY;
0000D7r 1               ;
0000D7r 1  A0 01        	ldy     #$01
0000D9r 1  20 rr rr     	jsr     ldaxysp
0000DCr 1  20 rr rr     	jsr     pushax
0000DFr 1  A2 00        	ldx     #$00
0000E1r 1  A9 02        	lda     #$02
0000E3r 1  A0 06        	ldy     #$06
0000E5r 1  20 rr rr     	jsr     staxspidx
0000E8r 1               ;
0000E8r 1               ; for (index=0;index<_countof(game_state->enemies);index++)
0000E8r 1               ;
0000E8r 1  A0 03        	ldy     #$03
0000EAr 1  20 rr rr     	jsr     ldaxysp
0000EDr 1  85 rr        	sta     regsave
0000EFr 1  86 rr        	stx     regsave+1
0000F1r 1  20 rr rr     	jsr     incax1
0000F4r 1  A0 02        	ldy     #$02
0000F6r 1  20 rr rr     	jsr     staxysp
0000F9r 1  A5 rr        	lda     regsave
0000FBr 1  A6 rr        	ldx     regsave+1
0000FDr 1  4C rr rr     	jmp     L004C
000100r 1               ;
000100r 1               ; game_state->player.entity.hp = 99;
000100r 1               ;
000100r 1  A0 05        L004D:	ldy     #$05
000102r 1  20 rr rr     	jsr     ldaxysp
000105r 1  20 rr rr     	jsr     pushax
000108r 1  A2 00        	ldx     #$00
00010Ar 1  A9 63        	lda     #$63
00010Cr 1  A0 F4        	ldy     #$F4
00010Er 1  20 rr rr     	jsr     staxspidx
000111r 1               ;
000111r 1               ; game_state->player.entity.x = SCREEN_SIZE_X/2;
000111r 1               ;
000111r 1  A0 05        	ldy     #$05
000113r 1  20 rr rr     	jsr     ldaxysp
000116r 1  20 rr rr     	jsr     pushax
000119r 1  A2 00        	ldx     #$00
00011Br 1  A9 14        	lda     #$14
00011Dr 1  A0 F0        	ldy     #$F0
00011Fr 1  20 rr rr     	jsr     staxspidx
000122r 1               ;
000122r 1               ; game_state->player.entity.type = ENTITY_PLAYER;
000122r 1               ;
000122r 1  A0 05        	ldy     #$05
000124r 1  20 rr rr     	jsr     ldaxysp
000127r 1  20 rr rr     	jsr     pushax
00012Ar 1  A2 00        	ldx     #$00
00012Cr 1  A9 01        	lda     #$01
00012Er 1  A0 F6        	ldy     #$F6
000130r 1  20 rr rr     	jsr     staxspidx
000133r 1               ;
000133r 1               ; };
000133r 1               ;
000133r 1  20 rr rr     	jsr     incsp6
000136r 1  60           	rts
000137r 1               
000137r 1               .endproc
000137r 1               
000137r 1               ; ---------------------------------------------------------------
000137r 1               ; unsigned char __near__ get_entity_tile (int)
000137r 1               ; ---------------------------------------------------------------
000137r 1               
000137r 1               .segment	"CODE"
000137r 1               
000137r 1               .proc	_get_entity_tile: near
000137r 1               
000137r 1               .segment	"CODE"
000137r 1               
000137r 1               ;
000137r 1               ; {
000137r 1               ;
000137r 1  20 rr rr     	jsr     pushax
00013Ar 1               ;
00013Ar 1               ; switch(type)
00013Ar 1               ;
00013Ar 1  A0 01        	ldy     #$01
00013Cr 1  20 rr rr     	jsr     ldaxysp
00013Fr 1               ;
00013Fr 1               ; {
00013Fr 1               ;
00013Fr 1  4C rr rr     	jmp     L006D
000142r 1               ;
000142r 1               ; }
000142r 1               ;
000142r 1  E0 00        L006D:	cpx     #$00
000144r 1  F0 03 4C rr  	jne     L006E
000148r 1  rr           
000149r 1  C9 01        	cmp     #$01
00014Br 1  D0 03 4C rr  	jeq     L0070
00014Fr 1  rr           
000150r 1  C9 02        	cmp     #$02
000152r 1  D0 03 4C rr  	jeq     L0073
000156r 1  rr           
000157r 1  4C rr rr     	jmp     L006E
00015Ar 1  4C rr rr     	jmp     L006E
00015Dr 1               ;
00015Dr 1               ; return 'p';
00015Dr 1               ;
00015Dr 1  A2 00        L0070:	ldx     #$00
00015Fr 1  A9 70        	lda     #$70
000161r 1  4C rr rr     	jmp     L006B
000164r 1               ;
000164r 1               ; return 'e';
000164r 1               ;
000164r 1  A2 00        L0073:	ldx     #$00
000166r 1  A9 65        	lda     #$65
000168r 1  4C rr rr     	jmp     L006B
00016Br 1               ;
00016Br 1               ; return 'x';
00016Br 1               ;
00016Br 1  A2 00        L006E:	ldx     #$00
00016Dr 1  A9 78        	lda     #$78
00016Fr 1  4C rr rr     	jmp     L006B
000172r 1               ;
000172r 1               ; }
000172r 1               ;
000172r 1  20 rr rr     L006B:	jsr     incsp2
000175r 1  60           	rts
000176r 1               
000176r 1               .endproc
000176r 1               
000176r 1               ; ---------------------------------------------------------------
000176r 1               ; void __near__ draw_entity (__near__ unsigned char *, __near__ struct s_entity *)
000176r 1               ; ---------------------------------------------------------------
000176r 1               
000176r 1               .segment	"CODE"
000176r 1               
000176r 1               .proc	_draw_entity: near
000176r 1               
000176r 1               .segment	"CODE"
000176r 1               
000176r 1               ;
000176r 1               ; {
000176r 1               ;
000176r 1  20 rr rr     	jsr     pushax
000179r 1               ;
000179r 1               ; const int FIRST_DIGIT_CHAR = 0x10;
000179r 1               ;
000179r 1  A2 00        	ldx     #$00
00017Br 1  A9 10        	lda     #$10
00017Dr 1  20 rr rr     	jsr     pushax
000180r 1               ;
000180r 1               ; unsigned char *draw_ptr = &screen_ptr[e_ptr->y * SCREEN_SIZE_X + e_ptr->x];
000180r 1               ;
000180r 1  A0 05        	ldy     #$05
000182r 1  20 rr rr     	jsr     ldaxysp
000185r 1  20 rr rr     	jsr     pushax
000188r 1  A0 05        	ldy     #$05
00018Ar 1  20 rr rr     	jsr     ldaxysp
00018Dr 1  A0 03        	ldy     #$03
00018Fr 1  20 rr rr     	jsr     ldaxidx
000192r 1  20 rr rr     	jsr     pushax
000195r 1  A2 00        	ldx     #$00
000197r 1  A9 28        	lda     #$28
000199r 1  20 rr rr     	jsr     tosmulax
00019Cr 1  20 rr rr     	jsr     pushax
00019Fr 1  A0 07        	ldy     #$07
0001A1r 1  20 rr rr     	jsr     ldaxysp
0001A4r 1  A0 01        	ldy     #$01
0001A6r 1  20 rr rr     	jsr     ldaxidx
0001A9r 1  20 rr rr     	jsr     tosaddax
0001ACr 1  20 rr rr     	jsr     tosaddax
0001AFr 1  20 rr rr     	jsr     pushax
0001B2r 1               ;
0001B2r 1               ; *draw_ptr = get_entity_tile(e_ptr->type);
0001B2r 1               ;
0001B2r 1  A0 01        	ldy     #$01
0001B4r 1  20 rr rr     	jsr     ldaxysp
0001B7r 1  20 rr rr     	jsr     pushax
0001BAr 1  A0 07        	ldy     #$07
0001BCr 1  20 rr rr     	jsr     ldaxysp
0001BFr 1  A0 07        	ldy     #$07
0001C1r 1  20 rr rr     	jsr     ldaxidx
0001C4r 1  20 rr rr     	jsr     _get_entity_tile
0001C7r 1  A0 00        	ldy     #$00
0001C9r 1  20 rr rr     	jsr     staspidx
0001CCr 1               ;
0001CCr 1               ; *(++draw_ptr) = e_ptr->hp / 10 + FIRST_DIGIT_CHAR;
0001CCr 1               ;
0001CCr 1  A0 00        	ldy     #$00
0001CEr 1  A2 00        	ldx     #$00
0001D0r 1  A9 01        	lda     #$01
0001D2r 1  20 rr rr     	jsr     addeqysp
0001D5r 1  20 rr rr     	jsr     pushax
0001D8r 1  A0 07        	ldy     #$07
0001DAr 1  20 rr rr     	jsr     ldaxysp
0001DDr 1  A0 05        	ldy     #$05
0001DFr 1  20 rr rr     	jsr     ldaxidx
0001E2r 1  20 rr rr     	jsr     pushax
0001E5r 1  A2 00        	ldx     #$00
0001E7r 1  A9 0A        	lda     #$0A
0001E9r 1  20 rr rr     	jsr     tosdivax
0001ECr 1  20 rr rr     	jsr     pushax
0001EFr 1  A0 07        	ldy     #$07
0001F1r 1  20 rr rr     	jsr     ldaxysp
0001F4r 1  20 rr rr     	jsr     tosaddax
0001F7r 1  A2 00        	ldx     #$00
0001F9r 1  A0 00        	ldy     #$00
0001FBr 1  20 rr rr     	jsr     staspidx
0001FEr 1               ;
0001FEr 1               ; *(++draw_ptr)   = e_ptr->hp % 10 + FIRST_DIGIT_CHAR;
0001FEr 1               ;
0001FEr 1  A0 00        	ldy     #$00
000200r 1  A2 00        	ldx     #$00
000202r 1  A9 01        	lda     #$01
000204r 1  20 rr rr     	jsr     addeqysp
000207r 1  20 rr rr     	jsr     pushax
00020Ar 1  A0 07        	ldy     #$07
00020Cr 1  20 rr rr     	jsr     ldaxysp
00020Fr 1  A0 05        	ldy     #$05
000211r 1  20 rr rr     	jsr     ldaxidx
000214r 1  20 rr rr     	jsr     pushax
000217r 1  A2 00        	ldx     #$00
000219r 1  A9 0A        	lda     #$0A
00021Br 1  20 rr rr     	jsr     tosmodax
00021Er 1  20 rr rr     	jsr     pushax
000221r 1  A0 07        	ldy     #$07
000223r 1  20 rr rr     	jsr     ldaxysp
000226r 1  20 rr rr     	jsr     tosaddax
000229r 1  A2 00        	ldx     #$00
00022Br 1  A0 00        	ldy     #$00
00022Dr 1  20 rr rr     	jsr     staspidx
000230r 1               ;
000230r 1               ; };
000230r 1               ;
000230r 1  20 rr rr     	jsr     incsp8
000233r 1  60           	rts
000234r 1               
000234r 1               .endproc
000234r 1               
000234r 1               ; ---------------------------------------------------------------
000234r 1               ; void __near__ damage_enemy (__near__ struct s_entity *)
000234r 1               ; ---------------------------------------------------------------
000234r 1               
000234r 1               .segment	"CODE"
000234r 1               
000234r 1               .proc	_damage_enemy: near
000234r 1               
000234r 1               .segment	"CODE"
000234r 1               
000234r 1               ;
000234r 1               ; {
000234r 1               ;
000234r 1  20 rr rr     	jsr     pushax
000237r 1               ;
000237r 1               ; if (e_ptr->hp > 0)
000237r 1               ;
000237r 1  A0 01        	ldy     #$01
000239r 1  20 rr rr     	jsr     ldaxysp
00023Cr 1  A0 05        	ldy     #$05
00023Er 1  20 rr rr     	jsr     ldaxidx
000241r 1  C9 01        	cmp     #$01
000243r 1  8A           	txa
000244r 1  E9 00        	sbc     #$00
000246r 1  70 02        	bvs     L0086
000248r 1  49 80        	eor     #$80
00024Ar 1  0A           L0086:	asl     a
00024Br 1  A9 00        	lda     #$00
00024Dr 1  A2 00        	ldx     #$00
00024Fr 1  2A           	rol     a
000250r 1  D0 03 4C rr  	jeq     L0084
000254r 1  rr           
000255r 1               ;
000255r 1               ; e_ptr->hp--;
000255r 1               ;
000255r 1  A0 01        	ldy     #$01
000257r 1  20 rr rr     	jsr     ldaxysp
00025Ar 1  20 rr rr     	jsr     pushax
00025Dr 1  A0 05        	ldy     #$05
00025Fr 1  20 rr rr     	jsr     ldaxidx
000262r 1  85 rr        	sta     regsave
000264r 1  86 rr        	stx     regsave+1
000266r 1  20 rr rr     	jsr     decax1
000269r 1  A0 04        	ldy     #$04
00026Br 1  20 rr rr     	jsr     staxspidx
00026Er 1  A5 rr        	lda     regsave
000270r 1  A6 rr        	ldx     regsave+1
000272r 1               ;
000272r 1               ; }
000272r 1               ;
000272r 1  20 rr rr     L0084:	jsr     incsp2
000275r 1  60           	rts
000276r 1               
000276r 1               .endproc
000276r 1               
000276r 1               ; ---------------------------------------------------------------
000276r 1               ; void __near__ one_frame (__near__ struct s_game_state *, __near__ unsigned char *)
000276r 1               ; ---------------------------------------------------------------
000276r 1               
000276r 1               .segment	"CODE"
000276r 1               
000276r 1               .proc	_one_frame: near
000276r 1               
000276r 1               .segment	"CODE"
000276r 1               
000276r 1               ;
000276r 1               ; {
000276r 1               ;
000276r 1  20 rr rr     	jsr     pushax
000279r 1               ;
000279r 1               ; for (index=0;index < _countof(game_state->enemies);index++)
000279r 1               ;
000279r 1  20 rr rr     	jsr     decsp4
00027Cr 1  A2 00        	ldx     #$00
00027Er 1  A9 00        	lda     #$00
000280r 1  A0 02        	ldy     #$02
000282r 1  20 rr rr     	jsr     staxysp
000285r 1  A0 03        L0089:	ldy     #$03
000287r 1  20 rr rr     	jsr     ldaxysp
00028Ar 1  E0 00        	cpx     #$00
00028Cr 1  D0 02        	bne     L0094
00028Er 1  C9 1E        	cmp     #$1E
000290r 1  20 rr rr     L0094:	jsr     boolult
000293r 1  F0 03 4C rr  	jne     L008C
000297r 1  rr           
000298r 1  4C rr rr     	jmp     L008A
00029Br 1               ;
00029Br 1               ; e = &game_state->enemies[index];
00029Br 1               ;
00029Br 1  A0 07        L008C:	ldy     #$07
00029Dr 1  20 rr rr     	jsr     ldaxysp
0002A0r 1  20 rr rr     	jsr     pushax
0002A3r 1  A0 05        	ldy     #$05
0002A5r 1  20 rr rr     	jsr     ldaxysp
0002A8r 1  20 rr rr     	jsr     aslax3
0002ABr 1  20 rr rr     	jsr     tosaddax
0002AEr 1  A0 00        	ldy     #$00
0002B0r 1  20 rr rr     	jsr     staxysp
0002B3r 1               ;
0002B3r 1               ; damage_enemy(e);
0002B3r 1               ;
0002B3r 1  A0 01        	ldy     #$01
0002B5r 1  20 rr rr     	jsr     ldaxysp
0002B8r 1  20 rr rr     	jsr     _damage_enemy
0002BBr 1               ;
0002BBr 1               ; draw_entity(screen_ptr, e);
0002BBr 1               ;
0002BBr 1  A0 05        	ldy     #$05
0002BDr 1  20 rr rr     	jsr     ldaxysp
0002C0r 1  20 rr rr     	jsr     pushax
0002C3r 1  A0 03        	ldy     #$03
0002C5r 1  20 rr rr     	jsr     ldaxysp
0002C8r 1  20 rr rr     	jsr     _draw_entity
0002CBr 1               ;
0002CBr 1               ; for (index=0;index < _countof(game_state->enemies);index++)
0002CBr 1               ;
0002CBr 1  A0 03        	ldy     #$03
0002CDr 1  20 rr rr     	jsr     ldaxysp
0002D0r 1  85 rr        	sta     regsave
0002D2r 1  86 rr        	stx     regsave+1
0002D4r 1  20 rr rr     	jsr     incax1
0002D7r 1  A0 02        	ldy     #$02
0002D9r 1  20 rr rr     	jsr     staxysp
0002DCr 1  A5 rr        	lda     regsave
0002DEr 1  A6 rr        	ldx     regsave+1
0002E0r 1  4C rr rr     	jmp     L0089
0002E3r 1               ;
0002E3r 1               ; draw_entity(screen_ptr, &game_state->player.entity);
0002E3r 1               ;
0002E3r 1  A0 05        L008A:	ldy     #$05
0002E5r 1  20 rr rr     	jsr     ldaxysp
0002E8r 1  20 rr rr     	jsr     pushax
0002EBr 1  A0 09        	ldy     #$09
0002EDr 1  20 rr rr     	jsr     ldaxysp
0002F0r 1  A0 F0        	ldy     #$F0
0002F2r 1  20 rr rr     	jsr     incaxy
0002F5r 1  20 rr rr     	jsr     _draw_entity
0002F8r 1               ;
0002F8r 1               ; }
0002F8r 1               ;
0002F8r 1  20 rr rr     	jsr     incsp8
0002FBr 1  60           	rts
0002FCr 1               
0002FCr 1               .endproc
0002FCr 1               
0002FCr 1               ; ---------------------------------------------------------------
0002FCr 1               ; void __near__ main (void)
0002FCr 1               ; ---------------------------------------------------------------
0002FCr 1               
0002FCr 1               .segment	"CODE"
0002FCr 1               
0002FCr 1               .proc	_main: near
0002FCr 1               
0002FCr 1               .segment	"CODE"
0002FCr 1               
0002FCr 1               ;
0002FCr 1               ; screen_ptr = OS.savmsc;
0002FCr 1               ;
0002FCr 1  A0 FE        	ldy     #$FE
0002FEr 1  20 rr rr     	jsr     subysp
000301r 1  A5 58        	lda     $0058
000303r 1  A6 59        	ldx     $0058+1
000305r 1  A0 FC        	ldy     #$FC
000307r 1  20 rr rr     	jsr     staxysp
00030Ar 1               ;
00030Ar 1               ; set_entities(&game_state);
00030Ar 1               ;
00030Ar 1  A5 rr        	lda     sp
00030Cr 1  A6 rr        	ldx     sp+1
00030Er 1  20 rr rr     	jsr     _set_entities
000311r 1               ;
000311r 1               ; start_benchmark();
000311r 1               ;
000311r 1  20 rr rr     	jsr     _start_benchmark
000314r 1               ;
000314r 1               ; for (times=0;times<100;++times)
000314r 1               ;
000314r 1  A2 00        	ldx     #$00
000316r 1  A9 00        	lda     #$00
000318r 1  A0 FA        	ldy     #$FA
00031Ar 1  20 rr rr     	jsr     staxysp
00031Dr 1  A0 FB        L00A8:	ldy     #$FB
00031Fr 1  20 rr rr     	jsr     ldaxysp
000322r 1  E0 00        	cpx     #$00
000324r 1  D0 02        	bne     L00AF
000326r 1  C9 64        	cmp     #$64
000328r 1  20 rr rr     L00AF:	jsr     boolult
00032Br 1  F0 03 4C rr  	jne     L00AB
00032Fr 1  rr           
000330r 1  4C rr rr     	jmp     L00A9
000333r 1               ;
000333r 1               ; one_frame(&game_state, screen_ptr);
000333r 1               ;
000333r 1  A5 rr        L00AB:	lda     sp
000335r 1  A6 rr        	ldx     sp+1
000337r 1  20 rr rr     	jsr     pushax
00033Ar 1  A0 FF        	ldy     #$FF
00033Cr 1  20 rr rr     	jsr     ldaxysp
00033Fr 1  20 rr rr     	jsr     _one_frame
000342r 1               ;
000342r 1               ; for (times=0;times<100;++times)
000342r 1               ;
000342r 1  A0 FA        	ldy     #$FA
000344r 1  A2 00        	ldx     #$00
000346r 1  A9 01        	lda     #$01
000348r 1  20 rr rr     	jsr     addeqysp
00034Br 1  4C rr rr     	jmp     L00A8
00034Er 1               ;
00034Er 1               ; end_benchmark();
00034Er 1               ;
00034Er 1  20 rr rr     L00A9:	jsr     _end_benchmark
000351r 1               ;
000351r 1               ; for(;;);
000351r 1               ;
000351r 1  4C rr rr     L00B5:	jmp     L00B8
000354r 1  4C rr rr     L00B7:	jmp     L00B5
000357r 1  4C rr rr     L00B8:	jmp     L00B7
00035Ar 1               ;
00035Ar 1               ; }
00035Ar 1               ;
00035Ar 1  A0 FE        	ldy     #$FE
00035Cr 1  20 rr rr     	jsr     addysp
00035Fr 1  60           	rts
000360r 1               
000360r 1               .endproc
000360r 1               
000360r 1               
